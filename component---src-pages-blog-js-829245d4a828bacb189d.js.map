{"version":3,"sources":["webpack:///./src/components/img/blog/1.js","webpack:///./src/components/img/biogeo.js","webpack:///./src/components/btn-wrap.js","webpack:///./src/components/img/hydro.js","webpack:///./src/components/img/blog/3.js","webpack:///./src/components/img/mv.js","webpack:///./src/components/btn-wrap.module.css","webpack:///./src/components/img-con.module.css","webpack:///./src/components/img-con.js","webpack:///./src/components/img/eko.js","webpack:///./src/components/img/blog/2.js","webpack:///./src/pages/blog.js"],"names":["Blog1","data","useStaticQuery","placeholderImage","childImageSharp","fluid","Biogeo","BtnWrap","children","className","btnwrapStyle","bwr","Hydro","Blog3","MV","module","exports","ImgCon","imgconStyle","ic","Eko","Blog2","title","to"],"mappings":"8FAAA,0DAoCeA,IArBD,WAAO,IAAD,IAEZC,EAAOC,yBAAe,cAY5B,OAAKD,SAAD,UAACA,EAAME,wBAAP,iBAAC,EAAwBC,uBAAzB,OAAC,EAAyCC,MAIvC,kBAAC,IAAD,CAAKA,MAAOJ,EAAKE,iBAAiBC,gBAAgBC,QAHhD,oD,kCC9BX,0DAoCeC,IArBA,WAAO,IAAD,IAEbL,EAAOC,yBAAe,cAY5B,OAAKD,SAAD,UAACA,EAAME,wBAAP,iBAAC,EAAwBC,uBAAzB,OAAC,EAAyCC,MAIvC,kBAAC,IAAD,CAAKA,MAAOJ,EAAKE,iBAAiBC,gBAAgBC,QAHhD,oD,kCC7BX,8CAeiBE,IAVD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACZ,yBAAKC,UAAWC,IAAaC,KAC1BH,K,kCCRP,0DAoCeI,IArBD,WAAO,IAAD,IAEZX,EAAOC,yBAAe,cAY5B,OAAKD,SAAD,UAACA,EAAME,wBAAP,iBAAC,EAAwBC,uBAAzB,OAAC,EAAyCC,MAIvC,kBAAC,IAAD,CAAKA,MAAOJ,EAAKE,iBAAiBC,gBAAgBC,QAHhD,oD,kCC9BX,0DAoCeQ,IArBD,WAAO,IAAD,IAEZZ,EAAOC,yBAAe,aAY5B,OAAKD,SAAD,UAACA,EAAME,wBAAP,iBAAC,EAAwBC,uBAAzB,OAAC,EAAyCC,MAIvC,kBAAC,IAAD,CAAKA,MAAOJ,EAAKE,iBAAiBC,gBAAgBC,QAHhD,oD,kCC9BX,0DAoCeS,IArBJ,WAAO,IAAD,IAETb,EAAOC,yBAAe,cAY5B,OAAKD,SAAD,UAACA,EAAME,wBAAP,iBAAC,EAAwBC,uBAAzB,OAAC,EAAyCC,MAIvC,kBAAC,IAAD,CAAKA,MAAOJ,EAAKE,iBAAiBC,gBAAgBC,QAHhD,oD,qBC7BXU,EAAOC,QAAU,CAAC,IAAM,gC,qBCAxBD,EAAOC,QAAU,CAAC,GAAK,8B,kCCAvB,8CAeiBC,IAVF,SAAC,GAAD,IAAGT,EAAH,EAAGA,SAAH,OACX,yBAAKC,UAAWS,IAAYC,IACzBX,K,kCCRP,0DAoCeY,IArBH,WAAO,IAAD,IAEVnB,EAAOC,yBAAe,cAY5B,OAAKD,SAAD,UAACA,EAAME,wBAAP,iBAAC,EAAwBC,uBAAzB,OAAC,EAAyCC,MAIvC,kBAAC,IAAD,CAAKA,MAAOJ,EAAKE,iBAAiBC,gBAAgBC,QAHhD,oD,kCC9BX,0DAoCegB,IArBD,WAAO,IAAD,IAEZpB,EAAOC,yBAAe,cAY5B,OAAKD,SAAD,UAACA,EAAME,wBAAP,iBAAC,EAAwBC,uBAAzB,OAAC,EAAyCC,MAIvC,kBAAC,IAAD,CAAKA,MAAOJ,EAAKE,iBAAiBC,gBAAgBC,QAHhD,oD,kCC9BX,wKAkBe,wBAAGJ,KAAH,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKqB,MAAM,+CACX,8DACA,mXAAwV,kBAAC,OAAD,CAAMC,GAAG,wBAAT,sBAAxV,KACA,6BACA,uDACA,yBAAKd,UAAU,SACb,6BACE,kBAAC,IAAD,MACA,6BACA,4BAAI,kBAAC,OAAD,CAAMc,GAAG,iEAAT,gEACJ,gDAGF,6BACE,kBAAC,IAAD,MACA,6BACA,4BAAI,kBAAC,OAAD,CAAMA,GAAG,yDAAT,oEACJ,iDAGF,6BACE,kBAAC,IAAD,MACA,6BACA,4BAAI,kBAAC,OAAD,CAAMA,GAAG,kCAAT,yDACJ,iDAIJ,6BACA,2BAAG","file":"component---src-pages-blog-js-829245d4a828bacb189d.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst Blog1 = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"blog/1.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:1200) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default Blog1\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst Biogeo = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"biogeografie.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:500) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default Biogeo\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nimport \"./btn-wrap.module.css\"\r\nimport btnwrapStyle from \"./btn-wrap.module.css\"\r\n\r\nconst BtnWrap = ({ children }) => (\r\n    <div className={btnwrapStyle.bwr}>\r\n      {children}\r\n    </div>\r\n)\r\n\r\n  BtnWrap.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n  }\r\n\r\n  export default BtnWrap\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst Hydro = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"vodni-prehrada.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:500) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default Hydro\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst Blog3 = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"blog/3.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:1200) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default Blog3\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst MV = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"misa-vojtechovska.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:600) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default MV\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bwr\":\"btn-wrap-module--bwr--3eaco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ic\":\"img-con-module--ic--E5zaL\"};","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nimport \"./img-con.module.css\"\r\nimport imgconStyle from \"./img-con.module.css\"\r\n\r\nconst ImgCon = ({ children }) => (\r\n    <div className={imgconStyle.ic}>\r\n      {children}\r\n    </div>\r\n)\r\n\r\n  ImgCon.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n  }\r\n\r\n  export default ImgCon\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst Eko = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"ekologie_zp.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:500) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default Eko\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst Blog2 = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"blog/2.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:1200) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default Blog2\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\n\r\nimport MV from \"../components/img/mv\"\r\nimport Biogeo from \"../components/img/biogeo\"\r\nimport Eko from \"../components/img/eko\"\r\nimport Hydro from \"../components/img/hydro\"\r\n\r\nimport Blog1 from \"../components/img/blog/1\"\r\nimport Blog2 from \"../components/img/blog/2\"\r\nimport Blog3 from \"../components/img/blog/3\"\r\n\r\nimport BtnWrap from \"../components/btn-wrap\"\r\nimport ImgCon from \"../components/img-con\"\r\nimport SEO from \"../components/seo\"\r\n\r\nexport default ({ data }) => (\r\n  <Layout>\r\n    <SEO title=\"Geografické předpeklí studijních materiálů\" />\r\n    <h1>Blog geografických zajímavostí</h1>\r\n    <p>Blog Zeměpisec.cz je místem, kde tu a tam přistane nějaké zajímavost ze světa geografie či GIS. Ty jsou okořeněné špetkou osobních postřehů a hrstičkou autorských map. Vše je s láskou zalité notnou dávkou nešikovných slovních obratů a spojení. Vítejte v pekle, nejmilejší návštěvníci. Pokud Vás nezajímají články, mohla bych třeba doporučit <Link to=\"/studijni-materialy/\">studijní materiály</Link>?</p>\r\n    <hr />\r\n    <h2>Všechny dostupné články</h2>\r\n    <div className=\"bl-li\">\r\n      <div>\r\n        <Blog1 />\r\n        <div>\r\n        <h3><Link to=\"/tropicke-cyklony-vlivem-klimaticke-zmeny-meni-mista-vyskytu/\">Tropické cyklóny vlivem klimatické změny mění místa výskytu</Link></h3>\r\n        <p>22. října, 2020</p>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Blog2 />\r\n        <div>\r\n        <h3><Link to=\"/zajem-koronavirus-google-casosberna-mapa-grafy-data/\">Vyhledávání koronaviru na Google: Časosběrná mapa, grafy a data</Link></h3>\r\n        <p>27. března, 2020</p>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Blog3 />\r\n        <div>\r\n        <h3><Link to=\"/pocet-cajoven-v-cr-a-krajich/\">Čajovnová velmoc Česko? Počet čajoven v ČR a krajích</Link></h3>\r\n        <p>18. února, 2020</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr />\r\n    <p><em>Prosím pozor, probíhá migrace obsahu a některé články ještě chybí. Pardon :)</em></p>\r\n\r\n\r\n  </Layout>\r\n)\r\n"],"sourceRoot":""}
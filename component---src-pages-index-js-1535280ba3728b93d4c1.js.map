{"version":3,"sources":["webpack:///./src/components/img/blog/1.js","webpack:///./src/components/img/biogeo.js","webpack:///./src/components/btn-wrap.js","webpack:///./src/components/img/hydro.js","webpack:///./src/pages/index.js","webpack:///./src/components/img/blog/3.js","webpack:///./src/components/img/mv.js","webpack:///./src/components/btn-wrap.module.css","webpack:///./src/components/img-con.module.css","webpack:///./src/components/img-con.js","webpack:///./src/components/img/eko.js","webpack:///./src/components/img/blog/2.js"],"names":["Blog1","data","useStaticQuery","placeholderImage","childImageSharp","fluid","Biogeo","BtnWrap","children","className","btnwrapStyle","bwr","Hydro","title","href","to","Blog3","MV","module","exports","ImgCon","imgconStyle","ic","Eko","Blog2"],"mappings":"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","file":"component---src-pages-index-js-1535280ba3728b93d4c1.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst Blog1 = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"blog/1.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:1200) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default Blog1\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst Biogeo = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"biogeografie.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:500) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default Biogeo\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nimport \"./btn-wrap.module.css\"\r\nimport btnwrapStyle from \"./btn-wrap.module.css\"\r\n\r\nconst BtnWrap = ({ children }) => (\r\n    <div className={btnwrapStyle.bwr}>\r\n      {children}\r\n    </div>\r\n)\r\n\r\n  BtnWrap.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n  }\r\n\r\n  export default BtnWrap\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst Hydro = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"vodni-prehrada.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:500) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default Hydro\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\n\r\nimport MV from \"../components/img/mv\"\r\nimport Biogeo from \"../components/img/biogeo\"\r\nimport Eko from \"../components/img/eko\"\r\nimport Hydro from \"../components/img/hydro\"\r\n\r\nimport Blog1 from \"../components/img/blog/1\"\r\nimport Blog2 from \"../components/img/blog/2\"\r\nimport Blog3 from \"../components/img/blog/3\"\r\n\r\nimport BtnWrap from \"../components/btn-wrap\"\r\nimport ImgCon from \"../components/img-con\"\r\nimport SEO from \"../components/seo\"\r\n\r\nexport default ({ data }) => (\r\n  <Layout>\r\n    <SEO title=\"Geografické předpeklí studijních materiálů\" />\r\n    <h1>Geografické předpeklí studijních materiálů</h1>\r\n    <p>Páteří stránky Zeměpisec.cz jsou bezesporu studijní materiály, které jsem tu a tam sepisovala během studia. Majoritu návštěv tvoří studentstvo, které hledá zejména před zkouškami každou drobnost připravující je na inferno nachystané zkoušejícími. Mluvit tak o předpeklí je zcela na místě. Alespoň je však zdarma a bez reklam. Hurá? Doplňkem je pak blog, kde sporadicky přispívám s nějakou tou geografickou zajímavostí.</p>\r\n    <hr />\r\n    <ImgCon><MV /><div><h2>O autorce projektu Zeměpisec.cz</h2>\r\n    <p>Ahoj! Míša Vojtěchovská jméno mé. Studium geografie a geoinformatiky mě přivedlo do řady zajímavých situací. Nemluvím teď o pocitu zoufalství a existenční tísni během zkouškového, to ne! Mluvím například o skvělé zkušenosti na stáži ČHMÚ, kdy jsem si třeba zkoušela měřit průtoky řek. Nebo když jsme na Erasmu v Norsku prováděli měření na ledovci. Hezky s lany, mačkami. Krom toho jsem si ale vytvořila pomocí GIS pěknou řádku map a prostorových analýz, což mě přivedlo k vývoji webů.</p>\r\n    <BtnWrap><a href=\"https://www.linkedin.com/in/vojtechovskych/\"><button>O mně profesně</button></a>\r\n    <a href=\"https://www.instagram.com/misa.vojte\"><button className=\"inv\">Nebo osobněji</button></a></BtnWrap></div></ImgCon>\r\n    <hr />\r\n    <h2>Blog s geografickými zajímavostmi</h2>\r\n    <div className=\"bl-li\">\r\n      <div>\r\n        <Blog1 />\r\n        <div>\r\n        <h3><Link to=\"/tropicke-cyklony-vlivem-klimaticke-zmeny-meni-mista-vyskytu/\">Tropické cyklóny vlivem klimatické změny mění místa výskytu</Link></h3>\r\n        <p>22. října, 2020</p>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Blog2 />\r\n        <div>\r\n        <h3><Link to=\"/zajem-koronavirus-google-casosberna-mapa-grafy-data/\">Vyhledávání koronaviru na Google: Časosběrná mapa, grafy a data</Link></h3>\r\n        <p>27. března, 2020</p>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Blog3 />\r\n        <div>\r\n        <h3><Link to=\"/pocet-cajoven-v-cr-a-krajich/\">Čajovnová velmoc Česko? Počet čajoven v ČR a krajích</Link></h3>\r\n        <p>18. února, 2020</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <p>Vidíte zjevení pouze posledních tří článků. <Link to=\"/blog/\">Klikněte pro zobrazení všech článků na blogu</Link>.</p>\r\n    <hr />\r\n    <h2>Studijní materiály zdarma</h2>\r\n    <br />\r\n    <ImgCon><Biogeo /><div><h3>Biogeografie</h3>\r\n    <p>Studijní materiály biogeografie se zabývají studiem rozšíření organismů v prostoru a čase. Mezi hlavní lákadla patří biologické invaze, teorie ostrovní biogeografie aj.</p>\r\n    <Link to=\"/biogeografie/\"><button>Začtěte se</button></Link>\r\n    </div></ImgCon>\r\n    <br />\r\n    <ImgCon><Hydro /><div><h3>Hydrologie</h3>\r\n    <p>Studijní materiály o vodě, bouřlivé i klidné. O povodních, řekách, ale také světovém oceánu či podzemní vodě.</p>\r\n    <Link to=\"/hydrologie/\"><button>Začtěte se</button></Link>\r\n    </div></ImgCon>\r\n    <br />\r\n    <ImgCon><Eko /><div><h3>Ekologie a životní prostředí</h3>\r\n    <p>Zápisky o vztazích organismů k okolí a k sobě navzájem. Zaměření na životní prostředí České republiky a jeho historický vývoj.</p>\r\n    <Link to=\"/ekologie-zivotni-prostredi/\"><button>Začtěte se</button></Link>\r\n    </div></ImgCon>\r\n    <br />\r\n    <p>V záloze číhá více zápisků z geografických a příbuzných oblastí. <Link to=\"/studijni-materialy/\">Klikněte pro zobrazení všech studijních materiálů</Link>.</p>\r\n    <hr />\r\n\r\n  </Layout>\r\n)\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst Blog3 = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"blog/3.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:1200) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default Blog3\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst MV = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"misa-vojtechovska.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:600) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default MV\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bwr\":\"btn-wrap-module--bwr--3eaco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ic\":\"img-con-module--ic--E5zaL\"};","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nimport \"./img-con.module.css\"\r\nimport imgconStyle from \"./img-con.module.css\"\r\n\r\nconst ImgCon = ({ children }) => (\r\n    <div className={imgconStyle.ic}>\r\n      {children}\r\n    </div>\r\n)\r\n\r\n  ImgCon.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n  }\r\n\r\n  export default ImgCon\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst Eko = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"ekologie_zp.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:500) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default Eko\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nconst Blog2 = () => {\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      placeholderImage: file(relativePath: { eq: \"blog/2.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth:1200) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  if (!data?.placeholderImage?.childImageSharp?.fluid) {\r\n    return <div>Picture not found</div>\r\n  }\r\n\r\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default Blog2\r\n"],"sourceRoot":""}